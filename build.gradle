plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'link.sigma5'
archivesBaseName = 'dumb-menu'
version '1.1.0'
description 'Core menu'

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.register('myJavadocs', Javadoc) {
    source = sourceSets.main.allJava
}


repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    implementation 'org.yaml:snakeyaml:2.0'
}

publishing {

        repositories {
            maven {
                name = 'sonatype'
                url = version.endsWith('SNAPSHOT') ?
                        'https://s01.oss.sonatype.org/content/repositories/snapshots/' :
                        'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username = project.findProperty('ossrhUsername') ?: System.getenv('OSSRH_USERNAME')
                    password = project.findProperty('ossrhPassword') ?: System.getenv('OSSRH_PASSWORD')
                    println "Using username for publishing: $username"
                    println "Using pass for publishing: $password"
                }
            }
        }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'dumb-menu'
            pom {
                name = 'Dumb menu'
                description = 'Library for creating a menu'
                url ='https://github.com/vadcom/dumb-menu'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'vadcom'
                        name = 'Vadim Dubina'
                        email = 'vadcomys@gmail.com'
                    }
                }

            }
        }
    }
}


test {
    useJUnitPlatform()
}